#!/bin/sh

# Helpers
if [ -d /proc/acpi/battery ]; then
	bat_cap() {
		echo $(grep "last full capacity:" "/proc/acpi/battery/$1/info" | sed 's/.*:\s*//' | cut -d' ' -f1).0
	}
	bat_rem() {
		grep "remaining capacity:" "/proc/acpi/battery/$1/state" | sed 's/.*:\s*//'
	}
	bat_present() {
		[ `grep "present:" "/proc/acpi/battery/$1/state" | sed 's/.*:\s*//'` = "yes" ]
	}
	BATTERIES=$(ls /proc/acpi/battery)
elif [ -d /sys/class/power_supply/BAT0 ]; then
	P=/sys/class/power_supply
	BATTERIES=$(ls $P | grep BAT)

	bat_present() {
		[ `cat "$P/$1/present"` = 1 ] 
	}
	bat_cap() {
		echo $(echo "scale=2; (`cat "$P/$1/energy_full"`/1000000)" | bc) Wh
	}
	bat_rem() {
		echo $(echo "scale=2; (`cat "$P/$1/energy_now"`/1000000)" | bc) Wh
	}
else
	UPOWER_PATH=/org/freedesktop/UPower/devices
	BATTERIES=$(upower -e | grep '_battery$' | sed -e "s#^$UPOWER_PATH/##" -e "s/_battery$//")

	bat_info() {
		upower -i "$UPOWER_PATH/$1_battery" | \
			 grep "$2:" | \
			 sed 's/^.*:\s*//'
	}

	bat_present() {
		[ `bat_info "$1" "present"` = "yes" ]
	}
	bat_cap() {
		bat_info "$1" "energy-full"
	}
	bat_rem() {
		bat_info "$1" "energy"
	}
fi


for bat in $BATTERIES; do
	echo "$bat:"
	if bat_present $bat; then
		rem=$(bat_rem $bat)
		max=$(bat_cap $bat)
		rem_no=$(echo $rem | cut -d' ' -f1)
		max_no=$(echo $max | cut -d' ' -f1)
		(
			printf "present:            yes\n"
			printf "max capacity:       %s\n" "$max"
			printf "remaining capacity: %s\n" "$rem"
			printf "remaining percent:  %.0f%%\n" $(echo "scale=2; ($rem_no/$max_no)*100" | bc)
		) | sed 's/^.*$/\t\0/'
	else
		printf "\tpresent:            no\n"
	fi
done
