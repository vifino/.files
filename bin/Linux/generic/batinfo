#!/bin/sh

# Helpers
if hasbin upower; then
	UPOWER_PATH=/org/freedesktop/UPower/devices
	BATTERIES=$(upower -e | grep 'battery' | sed -e "s#^$UPOWER_PATH/##" )
	bat_info() {
		upower -i "$UPOWER_PATH/$1" | \
			 grep "$2:" | \
			 sed 's/^.*:\s*//'
	}

	bat_present() {
		[ `bat_info "$1" "present"` = "yes" ]
	}
	bat_state() {
		bat_info "$1" "state"
	}
	bat_cap() {
		bat_info "$1" "energy-full"
	}
	bat_rem() {
		bat_info "$1" "energy"
	}
	bat_volt() {
		bat_info "$1" "voltage"
	}
	bat_rate() {
		bat_info "$1" "energy-rate"
	}
elif [ -d /proc/acpi/battery ]; then
	bat_present() {
		[ `grep "present:" "/proc/acpi/battery/$1/state" | sed 's/.*:\s*//'` = "yes" ]
	}
	bat_state() {
		echo "yes"
	}
	bat_cap() {
		echo $(grep "last full capacity:" "/proc/acpi/battery/$1/info" | sed 's/.*:\s*//' | cut -d' ' -f1).0
	}
	bat_rem() {
		grep "remaining capacity:" "/proc/acpi/battery/$1/state" | sed 's/.*:\s*//'
	}
	bat_volt() {
		echo "unknown"
	}
	bat_rate() {
		echo "unknown"
	}
	BATTERIES=$(ls /proc/acpi/battery)
elif [ -f /sys/class/power_supply/BAT0/status ]; then
	P=/sys/class/power_supply
	BATTERIES=$(ls $P | grep BAT)

	rescale() {
		echo "scale=2; (($*)/1000000)" | bc
	}

	bat_present() {
		[ `cat "$P/$1/present"` = 1 ] 
	}
	bat_state() {
		cat "$P/$1/status"
	}
	bat_volt() {
		echo $(rescale `cat "$P/$1/voltage_now"`) V
	}
	bat_volt_nom() {
		rescale `cat "$P/$1/voltage_min_design"`
	}
	bat_cap() {
		echo $(rescale "`cat "$P/$1/charge_full"`*`bat_volt_nom $1`") Wh
	}
	bat_rem() {
		echo $(rescale "`cat "$P/$1/charge_now"`*`bat_volt_nom $1`") Wh
	}
	bat_rate() {
		echo $(rescale "`cat $P/$1/current_now` * `cat $P/$1/voltage_now` / 1000000") W
	}
else
	echo "No supported batteries found." >/dev/stderr
	exit 1
fi


for bat in $BATTERIES; do
	echo "$(echo "$bat" | sed -e 's/^battery_//' -e 's/_battery$//'):" # small cleanup
	if bat_present $bat; then
		rem=$(bat_rem $bat)
		max=$(bat_cap $bat)
		rem_no=$(echo $rem | cut -d' ' -f1)
		max_no=$(echo $max | cut -d' ' -f1)
		(
			printf "present:            yes\n"
			printf "state:              %s\n" "$(bat_state $bat)"
			printf "remaining percent:  %.0f%%\n" $(echo "scale=2; ($rem_no/$max_no)*100" | bc)
			printf "remaining capacity: %s\n" "$rem"
			printf "max capacity:       %s\n" "$max"
			printf "voltage:            %s\n" "$(bat_volt $bat)"
			printf "transfer rate:      %s\n" "$(bat_rate $bat)"
		) | sed 's/^.*$/\t\0/'
	else
		printf "\tpresent:            no\n"
	fi
done
